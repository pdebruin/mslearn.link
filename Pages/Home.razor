@page "/"
@inject HttpClient Http
<!-- @using Microsoft.AspNetCore.Components.QuickGrid -->

<h1>Find your MS Learn link</h1>

<p>What link are you looking for?</p>

@if (links == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div >
        <input @bind-value="SearchText" @bind-value:event="oninput" placeholder="Search" />
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>URL</th>
                <th>Type</th>
                <th>Category</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var link in filteredlinks)
            {
                <tr>
                    <td>@link.Title</td>
                    <td><a href="@link.Url" target="_blank">@link.Url</a></td>
                    <td>@link.Type</td>
                    <td>@link.Category</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Link[]? links;

    public string SearchText = "";

    protected override async Task OnInitializedAsync()
    {
        links = await Http.GetFromJsonAsync<Link[]>("data/links.json");
    }

    @* WeatherForecast[]? filteredforecasts => forecasts?.Where(
        f => f.Title?.Contains(SearchText, StringComparison.OrdinalIgnoreCase) ?? false).ToArray(); *@
    Link[]? filteredlinks => links?.Where(
        f => f.Title?.Contains(SearchText, StringComparison.OrdinalIgnoreCase) ?? false).ToArray();

    public class Link
    {
        public string? Type { get; set; }
        public string? Title { get; set; }
        public string? Url { get; set; }
        public string? Category { get; set; }
    }
}
